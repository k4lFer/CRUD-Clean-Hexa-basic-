[
  {
    "ContainingType": "Presentation.Controllers.AuthController",
    "Method": "Auth",
    "RelativePath": "api/v1/Auth/Auth",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "soAuth",
        "Type": "Presentation.ServiceObject.Auth.SoAuthInput",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Presentation.ServiceObject.Auth.SoAuthOutput",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Presentation.Controllers.AuthController",
    "Method": "RefreshToken",
    "RelativePath": "api/v1/Auth/RefreshToken",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "token",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Presentation.ServiceObject.Auth.SoAuthOutput",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Presentation.Controllers.CustomerController",
    "Method": "Create",
    "RelativePath": "api/v1/Customer/Create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "soCustomer",
        "Type": "Presentation.ServiceObject.Customer.SoCustomerInput",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Presentation.ServiceObject.Customer.SoCustomerOutput",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Presentation.Controllers.CustomerController",
    "Method": "GetAllPaged",
    "RelativePath": "api/v1/Customer/GetAllPaged",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "pageNumber",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "pageSize",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "search",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Presentation.ServiceObject.Customer.SoCustomerOutput",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Presentation.Controllers.CustomerController",
    "Method": "GetById",
    "RelativePath": "api/v1/Customer/GetById",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Presentation.ServiceObject.Customer.SoCustomerOutput",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Presentation.Controllers.CustomerController",
    "Method": "Update",
    "RelativePath": "api/v1/Customer/Update",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "soCustomer",
        "Type": "Presentation.ServiceObject.Customer.SoCustomerInput",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Presentation.ServiceObject.Customer.SoCustomerOutput",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Presentation.Controllers.OrderController",
    "Method": "CancelOrder",
    "RelativePath": "api/v1/Order/CancelOrder",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "orderId",
        "Type": "System.Guid",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Presentation.ServiceObject.Order.SoOrderOutput",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Presentation.Controllers.OrderController",
    "Method": "Create",
    "RelativePath": "api/v1/Order/Create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "soOrder",
        "Type": "Presentation.ServiceObject.Order.SoOrderInput",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Presentation.ServiceObject.Order.SoOrderOutput",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Presentation.Controllers.OrderController",
    "Method": "GetAllOrders",
    "RelativePath": "api/v1/Order/GetAllOrders",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "pageNumber",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "pageSize",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Presentation.ServiceObject.Order.SoOrderOutput",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Presentation.Controllers.OrderController",
    "Method": "GetOrder",
    "RelativePath": "api/v1/Order/GetOrder",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "orderId",
        "Type": "System.Guid",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Presentation.ServiceObject.Order.SoOrderOutput",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Presentation.Controllers.OwnerController",
    "Method": "ChangePassword",
    "RelativePath": "api/v1/Owner/ChangePassword",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "Presentation.ServiceObject.Owner.SoOwnerOutput",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Presentation.Controllers.OwnerController",
    "Method": "Create",
    "RelativePath": "api/v1/Owner/Create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "soOwner",
        "Type": "Presentation.ServiceObject.Owner.SoOwnerInput",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Presentation.ServiceObject.Owner.SoOwnerOutput",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Presentation.Controllers.OwnerController",
    "Method": "GetOwner",
    "RelativePath": "api/v1/Owner/GetOwner",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Presentation.ServiceObject.Owner.SoOwnerOutput",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Presentation.Controllers.OwnerController",
    "Method": "GetProfile",
    "RelativePath": "api/v1/Owner/GetProfile",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "Presentation.ServiceObject.Owner.SoOwnerOutput",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Presentation.Controllers.ProductController",
    "Method": "Create",
    "RelativePath": "api/v1/Product/Create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "soProduct",
        "Type": "Presentation.ServiceObject.Product.SoProductInput",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Presentation.ServiceObject.Product.SoProductOutput",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Presentation.Controllers.ProductController",
    "Method": "GetAllPaged",
    "RelativePath": "api/v1/Product/GetAllPaged",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "pageNumber",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "pageSize",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "search",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Presentation.ServiceObject.Product.SoProductOutput",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Presentation.Controllers.ProductController",
    "Method": "GetById",
    "RelativePath": "api/v1/Product/GetById",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Presentation.ServiceObject.Product.SoProductOutput",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Presentation.Controllers.ProductController",
    "Method": "Update",
    "RelativePath": "api/v1/Product/Update",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "soProduct",
        "Type": "Presentation.ServiceObject.Product.SoProductInput",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Presentation.ServiceObject.Product.SoProductOutput",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  }
]